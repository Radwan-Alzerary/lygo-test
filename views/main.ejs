<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      body {
        background-image: url("img/background.png"); /* Add the path to your background image */
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        overflow: hidden;
        margin: 0;
        padding: 0;
      }

      .moving-text {
        position: absolute;
        top: 78%;
        left: 100%;
        transform: translate(-100%, -100%);
        color: black;
        font-size: 44px;
        white-space: nowrap;
        animation: moveText 20s linear infinite;
      }

      .headertext {
        color: black;
        font-size: 70px;
        /* white-space: nowrap; */
      }

      @keyframes moveText {
        0% {
          left: -100%;
        }
        100% {
          left: 100%;
        }
      }
    </style>
  </head>
  <body style="padding: 0; margin: 0">
    <div
      style="
        width: 100vw;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        font-size: 8rem;
      "
    >
      <div class="headertext">التسلسل الحالي</div>

      <div>
        <a
          id="lastPendingAuditor"
          style="color: black; font-weight: bold; font-size: 17rem"
          >1</a
        >
      </div>
      <div class="moving-text">
        مرحبا بكم في كلية طب الاسنان نتمنى لكم افضل الاوقات
      </div>
    </div>
    <script src="js/socket.js"></script>
    <script src="js/axios.js"></script>
    <script>
      async function fetchLastPendingAuditor() {
        try {
          const response = await axios.get(
            "http://172.20.82.220:5001/auditos/last-pending-auditor"
          );
          if (response.data) {
            setLastPendingAuditor(response.data.sequence ?? 0);
          }
        } catch (error) {
          setError(error);
          console.error("Error fetching last pending auditor:", error);
        }
      }

      function setLastPendingAuditor(value) {
        document.getElementById("lastPendingAuditor").innerText = Number(value)+1;
      }

      function setError(error) {
        // Handle error display here
      }

      // Call the function when the page loads
      window.onload = fetchLastPendingAuditor;
    </script>

    <script>
      // Define your server URL
      const SERVER_URL = "http://172.20.82.220:5001";

      // Connect to Socket.IO server
      const socket = io(SERVER_URL, {
        reconnection: true,
        reconnectionAttempts: Infinity,
        reconnectionDelay: 5000, // 5 second delay between each reconnection attempt
      });

      // Event listener for successful connection
      socket.on("connect", function () {
        console.log("Connected to the server");
      });

      // Event listener for disconnection
      socket.on("disconnect", function () {
        console.log("Disconnected from the server");
      });

      // Event listener for errors
      socket.on("connect_error", function (error) {
        console.error("Socket connection error:", error.message);
      });

      // Event listener for incoming messages
      socket.on("book-received", function (data) {
        console.log("Book received:", data);
        fetchLastPendingAuditor();
        // You can perform any action with the received data here
      });

      // Function to fetch last auditor
      function fetchLastAuditor() {
        // Implement logic to fetch last auditor
      }
    </script>
  </body>
</html>
